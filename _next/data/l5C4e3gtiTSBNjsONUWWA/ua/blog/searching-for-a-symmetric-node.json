{"pageProps":{"post":{"html":"<p>This type of tasks is usually a good thing to do when doing some interview preparation as it's pretty short, doesn't require a ton of questions and checks several basic skills at the same time.</p>\n<blockquote>\n  <p>Given two identical DOM tree structures, A and B, and a node from A, find the corresponding node in B.</p>\n</blockquote>\n<p>So, let's say we have a following DOM:</p>\n<pre class=\"html language-html\"><code class=\"hljs html language-html\">  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;root1&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;node1&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;root2&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;node2&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n<p><img src=\"/uploads/fe25ac3980c8fd4c3876d266b8e91cf0\" alt=\"\" /></p>\n<p>And we're given the node with id <code>node1</code> we need to be able to have just <code>#root1</code>, <code>#root2</code> and <code>#node1</code> to point to the node with id <code>node2</code>.</p>\n<p>Few things you can show off doing a task: understanding of prototyping, knowledge of basic Node properties, such as <code>parentNode</code> and <code>childNodes</code> and array methods.</p>\n<p>My first idea was to go from top to bottom to find a needed node, collecting a list of indices as I dive deeper in the tree, but then I remembered about <code>parentNode</code>.</p>\n<p>So the second idea is to go from a given node to the root node while collecting indices of the current node among its parent's children. After reaching the top, we can use the resulting path to go through the second root node and find a symmetrical node.</p>\n<p><img src=\"/uploads/3b1a759b128fd0d0d665849e50cdf819\" alt=\"\" /></p>\n<pre class=\"javascript language-javascript\"><code class=\"hljs javascript language-javascript\"><span class=\"hljs-comment\">// This function returns a real array of Nodes, so we can use methonds like &quot;indexOf&quot;</span>\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">getChildren</span>(<span class=\"hljs-params\">node</span>) {\n    <span class=\"hljs-comment\">// or you can use Array.from(node.childNodes);</span>\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">Array</span>.<span class=\"hljs-property\"><span class=\"hljs-keyword\">prototype</span></span>.<span class=\"hljs-property\">slice</span>.<span class=\"hljs-title function_\">call</span>(node.<span class=\"hljs-property\">childNodes</span>);\n}\n\n<span class=\"hljs-comment\">// This function returns an array of indices from given node to the root</span>\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">getPath</span>(<span class=\"hljs-params\">root, node</span>) {\n    <span class=\"hljs-keyword\">const</span> path = [];\n    <span class=\"hljs-keyword\">let</span> curElement = node;\n\n    <span class=\"hljs-comment\">// This is important as if a node is null or doesn&#x27;t have a parent</span>\n    <span class=\"hljs-comment\">// there is no need of searching further</span>\n    <span class=\"hljs-keyword\">while</span>(curElement !== root &amp;&amp; curElement &amp;&amp; curElement.<span class=\"hljs-property\">parentNode</span>) {\n     <span class=\"hljs-keyword\">const</span> index = <span class=\"hljs-title function_\">getChildren</span>(curElement.<span class=\"hljs-property\">parentNode</span>).<span class=\"hljs-title function_\">indexOf</span>(curElement);\n     path.<span class=\"hljs-title function_\">push</span>(index);\n        curElement = curElement.<span class=\"hljs-property\">parentNode</span>;\n    }\n\n    <span class=\"hljs-keyword\">return</span> path;\n}\n\n<span class=\"hljs-comment\">// Popping all values from the array of indices we go to the symmetrical node</span>\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">getNodeByPath</span>(<span class=\"hljs-params\">root, originalPath</span>) {\n    <span class=\"hljs-keyword\">const</span> path = [].<span class=\"hljs-title function_\">concat</span>(originalPath);\n    <span class=\"hljs-keyword\">let</span> element = root;\n    <span class=\"hljs-keyword\">while</span> (path.<span class=\"hljs-property\">length</span>) {\n       element = <span class=\"hljs-title function_\">getChildren</span>(element)[path.<span class=\"hljs-title function_\">pop</span>()];\n    }\n    <span class=\"hljs-keyword\">return</span> element;\n}\n\n<span class=\"hljs-comment\">// For convenience</span>\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">getSymmetricNode</span>(<span class=\"hljs-params\">root1, root2, node</span>) {\n <span class=\"hljs-keyword\">const</span> path = <span class=\"hljs-title function_\">getPath</span>(root1, node);\n <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title function_\">getNodeByPath</span>(root2, path);\n}\n\n<span class=\"hljs-keyword\">const</span> root1 = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&#x27;root1&#x27;</span>);\n<span class=\"hljs-keyword\">const</span> root2 = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&#x27;root2&#x27;</span>);\n<span class=\"hljs-keyword\">const</span> node1 = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&#x27;node1&#x27;</span>);\n<span class=\"hljs-keyword\">const</span> node2 = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&#x27;node2&#x27;</span>);\n\n<span class=\"hljs-keyword\">const</span> nodeX = <span class=\"hljs-title function_\">getSymmetricNode</span>(root1, root2, node1);\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(nodeX === node2); <span class=\"hljs-comment\">// true</span>\n</code></pre>\n<p>If you have a better solution, or any feedback, leave a comment below.</p>","type":"blog","meta":{"slug":"searching-for-a-symmetric-node","title":"Searching for a Symmetric Node","layout":"post","lang":"en","description":"After a while decided to post some more problem solutions. The first problem this year is about looking for a node in a DOM tree: given two identical DOM tree structures, A and B, and a node from A, find the corresponding node in B.\n","tags":["technology","problems solving","html","javascript"],"date":"2017-01-17 20:15:42 +0200"}},"_nextI18Next":{"initialI18nStore":{"ua":{"common":{"common":{"name":"–Ü–≥–æ—Ä –ö—É–∑—å–º–µ–Ω–∫–æ","version":"–≤–µ—Ä—Å—ñ—è","articleFooter":"–°–ø–æ–¥–æ–±–∞–ª–∞—Å—å —Å—Ç–∞—Ç—Ç—è? –ù–∞ —á–∞–π –º–æ–∂–Ω–∞ –ª–∏—à–∏—Ç–∏ <a href=\"https://fundof.me/kuzzmi?tip\" target=\"_blank\" rel=\"noreferrer\">–æ—Å—å —Ç—É—Ç</a> üòâ","articleNotAvailable":"–¶–µ–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–æ—Å—Ç—É–ø–Ω–∏–π —Ç—ñ–ª—å–∫–∏ –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—é –º–æ–≤–æ—é."},"menu":{"home":"–ì–æ–ª–æ–≤–Ω–∞","blog":"–¢–µ—Ö–Ω—ñ—á–Ω—ñ —Å—Ç–∞—Ç—Ç—ñ","thoughts":"–†–æ–∑–¥—É–º–∏","podcast":"–ü–æ–¥–∫–∞—Å—Ç","projects":"–ü—Ä–æ—î–∫—Ç–∏","about":"–ü—Ä–æ –º–µ–Ω–µ"},"home":{"meta":{"description":"–î–æ–º–∞—à–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –Ü–≥–æ—Ä–∞ –ö—É–∑—å–º–µ–Ω–∫–∞"},"bio":"—Ä–æ–∑—Ä–æ–±–Ω–∏–∫ —Ç–∞ tech –ø—ñ–¥–ø—Ä–∏—î–º–µ—Ü—å","read":"–ß–∏—Ç–∞—Ç–∏","recents":"–û—Å—Ç–∞–Ω–Ω—ñ –¥–æ–ø–∏—Å–∏","description":{"part_1":"–¢—É—Ç —è –ø—É–±–ª—ñ–∫—É—é ","part_2":"—Å–≤–æ—ó —Ä–æ–∑–¥—É–º–∏","part_3":" —ñ ","part_4":" —Ç–µ—Ö–Ω—ñ—á–Ω—ñ —Å—Ç–∞—Ç—Ç—ñ","part_5":". –ó–∞–≤–∑—è—Ç–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á Linux —ñ vim. –°–ø—ñ–≤–∑–∞—Å–Ω–æ–≤–Ω–∏–∫ –≤ "}},"blog":{"description":"–ó–Ω–∞—Ö—ñ–¥–∫–∏ —ñ –≤—Å—ñ–ª—è–∫—ñ —Ü—ñ–∫–∞–≤–æ—Å—Ç—ñ, —è–∫–∏–º–∏ —è –∑–∞—Ö–æ—Ç—ñ–≤ –ø–æ–¥—ñ–ª–∏—Ç–∏—Å—è –∑—ñ —Å–≤—ñ—Ç–æ–º."},"thoughts":{"description":"–ú–æ—ó —Ä–æ–∑–¥—É–º–∏ –ø—Ä–æ –∂–∏—Ç—Ç—è —ñ —Ä–æ–±–æ—Ç—É."},"about":{"body":"–ü—Ä–∏–≤—ñ—Ç, –º–µ–Ω–µ –∑–≤—É—Ç—å –Ü–≥–æ—Ä –ö—É–∑—å–º–µ–Ω–∫–æ. –Ø –ª—é–±–ª—é —Å–≤–æ—é –∂—ñ–Ω–∫—É, —Å–∏–Ω–∞, —Å–æ–±–∞–∫—É —Ç–∞ –∫–æ—Ç–∞. –ê —â–µ —è –ª—é–±–ª—é –≤–∏–≥–∞–¥—É–≤–∞—Ç–∏ —Ä—ñ–∑–Ω—ñ —à—Ç—É–∫–µ–Ω—Ü—ñ—ó —ñ –≤—Ç—ñ–ª—é–≤–∞—Ç–∏ —ó—Ö —É –∂–∏—Ç—Ç—è (—ñ–Ω–∫–æ–ª–∏ —Ü–µ –≤–¥–∞—î—Ç—å—Å—è, –∞–ª–µ —á–∞—Å—Ç—ñ—à–µ - –Ω—ñ).<br /><br />–î–æ—Å—Ç–∞—Ç–Ω—å–æ –¥–æ–≤–≥–æ –º–æ—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –±—É–ª–∞ —Å—Ö–æ–∂–∞ –Ω–∞ —Ä–µ–∑—é–º–µ —ñ–∑ –∫—É–ø–æ—é –∫–ª—ñ—à–µ, –º–µ–Ω—ñ —Ü–µ –Ω–∞–±—Ä–∏–¥–ª–æ —ñ —è –ø–µ—Ä–µ—Ç–≤–æ—Ä–∏–≤ —ó—ó –Ω–∞ —â–æ—Å—å, —â–æ –±—ñ–ª—å—à–µ —Å—Ö–æ–∂–µ –Ω–∞ –º–µ–Ω–µ —ñ –º—ñ–π –ø—ñ–¥—Ö—ñ–¥ –¥–æ –∂–∏—Ç—Ç—è: –ø–æ—î–¥–Ω–∞–Ω–Ω—è –ª–µ–≥–∫–æ—Å—Ç—ñ, –µ—Å—Ç–µ—Ç–∏–∫–∏, –¥–µ—è–∫–æ—ó —Å–µ—Ä–π–æ–∑–Ω–æ—Å—Ç—ñ —ñ –≥—É–º–æ—Ä—É (—ñ —Å–∫—Ä–æ–º–Ω–æ—Å—Ç—ñ).<br /><br />–£ –≤—ñ–ª—å–Ω–∏–π –≤—ñ–¥ —Ä–æ–±–æ—Ç–∏ —á–∞—Å —è –ø—Ä–æ–≤–æ–¥–∂—É –∑ —Ä–æ–¥–∏–Ω–æ—é, –∑–∞–π–º–∞—é—Å—è –ø–µ—Ç-–ø—Ä–æ—î–∫—Ç–∞–º–∏, –≥—Ä–∞—é —É –≤—ñ–¥–µ–æ —ñ–≥—Ä–∏ —ñ —â–µ –±–∞–≥–∞—Ç–æ —á–æ–≥–æ —Ä–æ–±–ª—é: –≤—ñ–¥ –≥—Ä–∏ –Ω–∞ —É–∫—É–ª—î–ª—î —ñ –º–∞–ª—é–≤–∞–Ω–Ω—è, –¥–æ –µ–ª–µ–∫—Ç—Ä–æ—Ç–µ—Ö–Ω—ñ–∫–∏ —ñ —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–≥–æ –∫–µ—Ä—É–≤–∞–Ω–Ω—è –∞–≤—Ç—ñ–≤–∫–æ—é.<br /><br />–Ø –±–µ–∑–ª—ñ—á —Ä–∞–∑—ñ–≤ –Ω–∞–º–∞–≥–∞–≤—Å—è –ø—ñ–¥–≤–∏—â–∏—Ç–∏ —Ä—ñ–≤–µ–Ω—å —Å–≤–æ—î—ó –æ–Ω–ª–∞–π–Ω-–ø—Ä–∏—Å—É—Ç–Ω–æ—Å—Ç—ñ, –ø—Ä–æ—Ç–µ —Ü–µ –Ω—ñ–∫–æ–ª–∏ –Ω–µ —Ç—Ä–∏–≤–∞—î –¥–æ–≤–≥–æ üôÉ<br /><br />–ú–æ—ó —Å–æ—Ü—ñ–∞–ª—å–Ω—ñ –º–µ—Ä–µ–∂—ñ —ñ –∫–æ–Ω—Ç–∞–∫—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ –æ—Å—å —Ç—É—Ç: <a href=\"https://fundof.me/igor\">fundof.me/igor</a>"},"tags":{"philosophy":"—Ñ—ñ–ª–æ—Å–æ—Ñ—ñ—è","psychology":"–ø—Å–∏—Ö–æ–ª–æ–≥—ñ—è","story":"–º–æ—è —ñ—Å—Ç–æ—Ä—ñ—è","marketing":"–º–∞—Ä–∫–µ—Ç–∏–Ω–≥","startup":"—Å—Ç–∞—Ä—Ç–∞–ø–∏","bad advice":"—à–∫—ñ–¥–ª–∏–≤—ñ –ø–æ—Ä–∞–¥–∏","career":"–∫–∞—Ä'—î—Ä–∞","work":"—Ä–æ–±–æ—Ç–∞","burn out":"–≤–∏–≥–æ—Ä—è–Ω–Ω—è"}}},"en":{"common":{"common":{"name":"Igor Kuzmenko","version":"version","articleFooter":"If you enjoyed the reading, you can tip me <a href=\"https://fundof.me/kuzzmi?tip\" target=\"_blank\" rel=\"noreferrer\">here</a> üòâ","articleNotAvailable":"This content is available only in Ukrainian."},"menu":{"home":"Home","blog":"Tech articles","thoughts":"Thoughts","podcast":"Podcast","projects":"Projects","about":"About me"},"home":{"meta":{"description":"Home page of Igor Kuzmenko"},"bio":"developer and tech entrepreneur","read":"Read","recents":"Recent publications","description":{"part_1":"Here I publish ","part_2":"my thoughts","part_3":" and ","part_4":" tech articles","part_5":". Avid Linux and vim user. Co-founder at "}},"blog":{"description":"Different findings in the tech world that I want to share with world."},"thoughts":{"description":"My thoughts about life and work in Ukrainian."},"about":{"body":"Hi üëã<br /><br />My name is Igor Kuzmenko. I love my wife, son, dog and cat. And I love making things up and making them real (but more often this doesn't happen).<br /><br />For a long time, my personal page seemed like an official paper with a bunch of clich√©s, so I got sick of it and turned it into something what feels more like me and my approach to life: a combination of lightness, aesthetics, some seriousness and humor (and modesty).<br /><br />I spend my spare time with my family, doing pet projects, playing video games and more: from playing the ukulele and drawing, to electrical engineering and sports car driving.<br /><br />I've tried countless times to increase my online presence, but it never lasts long üôÉ<br /><br />My social networks and contacts are available here: <a href=\"https://fundof.me/igor\">fundof.me/igor</a>"}}}},"initialLocale":"ua","userConfig":{"i18n":{"defaultLocale":"en","locales":["en","ua"]},"default":{"i18n":{"defaultLocale":"en","locales":["en","ua"]}}}}},"__N_SSG":true}