{"pageProps":{"post":{"html":"<p>After dropping the support of IE9, I finally managed to properly refactor views and styles of one of my applications, and I thought that it could be interesting for someone else, as I simply couldn't find any information about combining the relative sizes and flexbox.</p>\n<p>The layout is pretty common, but some of the application's features required me to move away from straighforward implementation and due to \"we need this now!\" I had to use a lot of <code>/* TODO: refactor later */</code> techniques.</p>\n<p>Initially I used a combination of \"absolute fullscreen\" styles with very messy nesting and something else that I would delete as soon as I have a chance to do that.</p>\n<p>The layout, of course, has to be responsive and flexible enough to add more heavy UI-focused features. All the <code>block</code> elements inside the right container have to be sized relatively to the visible space on the screen as well as to be able to stack to the left. So my choice fell on <code>display: flexbox</code>, as it's purely what I need and it's supported in all the browsers I need to support.</p>\n<p>I made this choice because of several requirements, e.g. this right column has to be properly resized if something appears on the top of it, and/or the left panel is visible. So it has to take all the time the maximum space on the screen as possible, while we can add or remove different parts of the UI. Think customization.</p>\n<p>The problem is that <code>flexbox</code> doesn't work when it comes to relativeness, you cannot use <code>height: 50%</code> inside the flexible box. So I had to find a way of how this can be done.</p>\n<p>As we may know, relative sizes work only with some absolute values. If you take 50% of 0 you'll receive 0, right? So the main problem here is to find a way how and where we can put this absolute values.</p>\n<p>So I came up with an idea to make one block flexible, but with <code>position: relative</code> and without absolute sizes. Then put a wrapper inside it with <code>position: absolute</code> and make it \"fullscreen\" (<code>top: 0; left: 0; right: 0; bottom: 0</code>). Then we can put relatively sized items inside the wrapper. That simple.</p>\n<p>It can be represented by this piece of HTML:</p>\n<pre class=\"html language-html\"><code class=\"hljs html language-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;container&quot;</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;menu&quot;</span>&gt;</span>\n\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;blocks&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;container&quot;</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;wrapper&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;child child1&quot;</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span> <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;child child2&quot;</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span> <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;child child4&quot;</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span> <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;child child4&quot;</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span> <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;child child4&quot;</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span> <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;child child4&quot;</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span> <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n<p>Let's start from body. It has to be fullscreen:</p>\n<pre class=\"scss language-scss\"><code class=\"hljs scss language-scss\"><span class=\"hljs-selector-tag\">body</span> {\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">100%</span>;\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">100%</span>;\n  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#000</span>;\n  <span class=\"hljs-attribute\">overflow</span>: hidden;\n}\n</code></pre>\n<p>Next thing is our application container:</p>\n<pre class=\"scss language-scss\"><code class=\"hljs scss language-scss\"><span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-comment\">/* This guy will contain left and right columns */</span>\n  <span class=\"hljs-attribute\">display</span>: flex;\n  <span class=\"hljs-attribute\">flex-direction</span>: row;\n\n  <span class=\"hljs-comment\">/* But in order to take all the available space we need\n     to use this */</span>\n  <span class=\"hljs-attribute\">position</span>: absolute;\n  <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-attribute\">left</span>: <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-attribute\">right</span>: <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-attribute\">bottom</span>: <span class=\"hljs-number\">0</span>;\n\n  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#eee</span>;\n  <span class=\"hljs-attribute\">overflow</span>: auto;\n}\n</code></pre>\n<p>Our next step is to add left and right columns.</p>\n<pre class=\"scss language-scss\"><code class=\"hljs scss language-scss\"><span class=\"hljs-comment\">// left-column</span>\n<span class=\"hljs-selector-class\">.menu</span> {\n  <span class=\"hljs-comment\">/* Let&#x27;s say that it needs to take just 1/6 of the\n     screen */</span>\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">16.66666667%</span>;\n  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#dfdfdf</span>;\n}\n\n<span class=\"hljs-comment\">// right-column</span>\n<span class=\"hljs-selector-class\">.blocks</span> {\n  <span class=\"hljs-comment\">/* And this will make the content of the block flexible\n     and column-oriented */</span>\n  <span class=\"hljs-attribute\">display</span>: flex;\n  <span class=\"hljs-attribute\">flex-direction</span>: column;\n\n  <span class=\"hljs-comment\">/* And this will stretch the column to take all available\n     space on the right from the left column */</span>\n  <span class=\"hljs-attribute\">flex</span>: <span class=\"hljs-number\">1</span>;\n\n  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#cacaca</span>;\n}\n</code></pre>\n<p>Next we need to put another container in the right-column, that will take all available space, in case (for me that was the case) we want to put more elements on the top of our <code>block</code> elements. Like some kind of a menu, or anything else.</p>\n<pre class=\"scss language-scss\"><code class=\"hljs scss language-scss\"><span class=\"hljs-selector-class\">.blocks</span> <span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-comment\">/* This will make this container relative to its parent\n     container */</span>\n  <span class=\"hljs-attribute\">position</span>: relative;\n  <span class=\"hljs-comment\">/* And this will stretch it */</span>\n  <span class=\"hljs-attribute\">flex</span>: <span class=\"hljs-number\">1</span>;\n}\n\n<span class=\"hljs-selector-class\">.wrapper</span> {\n  <span class=\"hljs-comment\">/* Finally, our wrapper will introduce absolute values inside,\n     so we can use relative sizes */</span>\n  <span class=\"hljs-attribute\">position</span>: absolute;\n  <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-attribute\">left</span>: <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-attribute\">right</span>: <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-attribute\">bottom</span>: <span class=\"hljs-number\">0</span>;\n}\n</code></pre>\n<p>And now <em>finally</em> we can make our children sized relatively. So the sizing will be done according to the size of their parent, which will take all the available space on the screen.\nSo:</p>\n<pre class=\"scss language-scss\"><code class=\"hljs scss language-scss\"><span class=\"hljs-selector-class\">.child</span> {\n  <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">8px</span>;\n\n  <span class=\"hljs-comment\">/* Not a big surprise, this will push all blocks to the left */</span>\n  <span class=\"hljs-attribute\">float</span>: left;\n\n  <span class=\"hljs-comment\">/* Instead of &lt;p&gt; you can put any content you need */</span>\n  <span class=\"hljs-selector-tag\">p</span> {\n    <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#ffffff</span>;\n    <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">100%</span>;\n    <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">100%</span>;\n    <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">0</span>;\n  }\n\n  &amp;<span class=\"hljs-selector-class\">.child1</span> {\n    <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">50%</span>;\n    <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">100%</span>;\n  }\n\n  &amp;<span class=\"hljs-selector-class\">.child2</span>,\n  &amp;<span class=\"hljs-selector-class\">.child3</span> {\n    <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">50%</span>;\n    <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">50%</span>;\n  }\n\n  &amp;<span class=\"hljs-selector-class\">.child4</span> {\n    <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">25%</span>;\n    <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">25%</span>;\n  }\n}\n</code></pre>\n<p>The final result of the stylesheet:</p>\n<pre class=\"scss language-scss\"><code class=\"hljs scss language-scss\">* {\n  <span class=\"hljs-attribute\">box-sizing</span>: border-box;\n}\n\n<span class=\"hljs-selector-tag\">body</span> {\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">100%</span>;\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">100%</span>;\n  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#000</span>;\n  <span class=\"hljs-attribute\">overflow</span>: hidden;\n\n  <span class=\"hljs-selector-class\">.container</span> { <span class=\"hljs-comment\">// main container</span>\n    <span class=\"hljs-attribute\">position</span>: absolute;\n    <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-attribute\">left</span>: <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-attribute\">right</span>: <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-attribute\">bottom</span>: <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-attribute\">display</span>: flex;\n    <span class=\"hljs-attribute\">flex-direction</span>: row;\n    <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#eee</span>;\n    <span class=\"hljs-attribute\">overflow</span>: auto;\n\n    <span class=\"hljs-selector-class\">.menu</span> { <span class=\"hljs-comment\">// left-column</span>\n      <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">16.66666667%</span>;\n      <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#dfdfdf</span>;\n    }\n\n    <span class=\"hljs-selector-class\">.blocks</span> { <span class=\"hljs-comment\">// right-column</span>\n      <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">0</span>;\n      <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">100%</span>;\n      <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">100%</span>;\n      <span class=\"hljs-attribute\">display</span>: flex;\n      <span class=\"hljs-attribute\">flex-direction</span>: column;\n      <span class=\"hljs-attribute\">flex</span>: <span class=\"hljs-number\">1</span>;\n      <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#cacaca</span>;\n\n      <span class=\"hljs-selector-class\">.container</span> {\n        <span class=\"hljs-attribute\">position</span>: relative;\n        <span class=\"hljs-attribute\">flex</span>: <span class=\"hljs-number\">1</span>;\n\n        <span class=\"hljs-selector-class\">.wrapper</span> {\n          <span class=\"hljs-attribute\">position</span>: absolute;\n          <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>;\n          <span class=\"hljs-attribute\">left</span>: <span class=\"hljs-number\">0</span>;\n          <span class=\"hljs-attribute\">right</span>: <span class=\"hljs-number\">0</span>;\n          <span class=\"hljs-attribute\">bottom</span>: <span class=\"hljs-number\">0</span>;\n\n          <span class=\"hljs-selector-class\">.child</span> {\n            <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">8px</span>;\n            <span class=\"hljs-attribute\">float</span>: left;\n\n            <span class=\"hljs-selector-tag\">p</span> {\n              <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#ffffff</span>;\n              <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">100%</span>;\n              <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">100%</span>;\n              <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">0</span>;\n            }\n\n            &amp;<span class=\"hljs-selector-class\">.child1</span> {\n              <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">50%</span>;\n              <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">100%</span>;\n            }\n\n            &amp;<span class=\"hljs-selector-class\">.child2</span>,\n            &amp;<span class=\"hljs-selector-class\">.child3</span> {\n              <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">50%</span>;\n              <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">50%</span>;\n            }\n\n            &amp;<span class=\"hljs-selector-class\">.child4</span> {\n              <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">25%</span>;\n              <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">25%</span>;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n</code></pre>\n<p>You can find working example on the <a href=\"https://jsfiddle.net/kuzzmi/rp3hrm78/2/\">JSFiddle</a>.</p>\n<p>I doubt that this is the only way of doing that, although that was the only way that worked for me.</p>","type":"blog","meta":{"slug":"flexbox-and-relative-sizes","title":"Flexbox and Relative Sizes","layout":"post","lang":"en","description":"How to implement the layout that utilizes both flexbox and relative sizing. Incredibly useful for displaying a cascade grid within a flexbox element.\n","tags":["technology","html","css","web development","tips"],"date":"2016-02-08T11:15:51Z"}},"_nextI18Next":{"initialI18nStore":{"ua":{"common":{"common":{"name":"Ігор Кузьменко","version":"версія","articleFooter":"Сподобалась стаття? На чай можна лишити <a href=\"https://fundof.me/igor?tip\" target=\"_blank\" rel=\"noreferrer\">ось тут</a> 😉","articleNotAvailable":"Цей контент доступний тільки англійською мовою."},"menu":{"home":"Головна","blog":"Технічні статті","thoughts":"Роздуми","podcast":"Подкаст","projects":"Проєкти","about":"Про мене"},"home":{"meta":{"description":"Домашня сторінка Ігора Кузьменка"},"bio":"розробник та tech підприємець","read":"Читати","recents":"Останні дописи","description":{"part_1":"Тут я публікую ","part_2":"свої роздуми","part_3":" і ","part_4":" технічні статті","part_5":". Завзятий користувач Linux і vim. Співзасновник в "}},"blog":{"description":"Знахідки і всілякі цікавості, якими я захотів поділитися зі світом."},"thoughts":{"description":"Мої роздуми про життя і роботу."},"about":{"body":"Привіт, мене звуть Ігор Кузьменко. Я люблю свою дружину, сина, собаку та кота. А ще я люблю вигадувати різні штукенції і втілювати їх у життя (інколи це вдається, але частіше — ні).<br /><br />Достатньо довго моя персональна сторінка була схожа на резюме із купою кліше, мені це набридло і я перетворив її на щось, що більше схоже на мене і мій підхід до життя: поєднання легкості, естетики, деякої серйозності і гумору (<i>і скромності</i>).<br /><br />У вільний від роботи час я проводжу з родиною, займаюся пет-проєктами, граю у відео ігри і ще багато чого роблю: від гри на укулєлє і малювання, до електротехніки і спортивного керування автівкою.<br /><br />Я безліч разів намагався підвищити рівень своєї онлайн-присутності, проте це ніколи не триває довго 🙃<br /><br />Мої соціальні мережі і контакти доступні ось тут: <a href=\"https://fundof.me/igor\">fundof.me/igor</a>"},"tags":{"philosophy":"філософія","psychology":"психологія","story":"моя історія","marketing":"маркетинг","startup":"стартапи","bad advice":"шкідливі поради","career":"кар'єра","work":"робота","burn out":"вигоряння"}}},"en":{"common":{"common":{"name":"Igor Kuzmenko","version":"version","articleFooter":"If you enjoyed the reading, you can tip me <a href=\"https://fundof.me/igor?tip\" target=\"_blank\" rel=\"noreferrer\">here</a> 😉","articleNotAvailable":"This content is available only in Ukrainian."},"menu":{"home":"Home","blog":"Tech articles","thoughts":"Thoughts","podcast":"Podcast","projects":"Projects","about":"About me"},"home":{"meta":{"description":"Home page of Igor Kuzmenko"},"bio":"developer and tech entrepreneur","read":"Read","recents":"Recent publications","description":{"part_1":"Here I publish ","part_2":"my thoughts","part_3":" and ","part_4":" tech articles","part_5":". Avid Linux and vim user. Co-founder at "}},"blog":{"description":"Different findings in the tech world that I want to share with world."},"thoughts":{"description":"My thoughts about life and work in Ukrainian."},"about":{"body":"Hi 👋<br /><br />My name is Igor Kuzmenko. I love my wife, son, dog and cat. And I love making things up and making them real (but more often this doesn't happen).<br /><br />For a long time, my personal page seemed like an official paper with a bunch of clichés, so I got sick of it and turned it into something what feels more like me and my approach to life: a combination of lightness, aesthetics, some seriousness and humor (and modesty).<br /><br />I spend my spare time with my family, doing pet projects, playing video games and more: from playing the ukulele and drawing, to electrical engineering and sports car driving.<br /><br />I've tried countless times to increase my online presence, but it never lasts long 🙃<br /><br />My social networks and contacts are available here: <a href=\"https://fundof.me/igor\">fundof.me/igor</a>"}}}},"initialLocale":"ua","userConfig":{"i18n":{"defaultLocale":"en","locales":["en","ua"]},"default":{"i18n":{"defaultLocale":"en","locales":["en","ua"]}}}}},"__N_SSG":true}