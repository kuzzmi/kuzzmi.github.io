{"pageProps":{"post":{"html":"<p>At the moment I'm learning Android development and one of the issues that I faced was animating Path transparency.</p>\n<p>I couldn't find a copy&amp;paste solution, what is pretty strange as it should be a straightforward problem/solution.</p>\n<p>This is why after making a few tries and finding something that is actually working, I'd like to share my solution.</p>\n<pre class=\"java language-java\"><code class=\"hljs java language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">OverlayDrawView</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_\">View</span> {\n    <span class=\"hljs-keyword\">private</span> Paint mPaint;\n    <span class=\"hljs-keyword\">private</span> Path mPath;\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-type\">float</span> mAlpha;\n    <span class=\"hljs-keyword\">private</span> ObjectAnimator mObjectAnimator;\n\n    <span class=\"hljs-comment\">/**\n     * Default constructor\n     * <span class=\"hljs-doctag\">@param</span> context\n     */</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-title function_\">OverlayDrawView</span><span class=\"hljs-params\">(Context context)</span> {\n        <span class=\"hljs-built_in\">super</span>(context);\n        init();\n    }\n\n    <span class=\"hljs-comment\">/**\n     * Default constructor\n     * <span class=\"hljs-doctag\">@param</span> context\n     */</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-title function_\">OverlayDrawView</span><span class=\"hljs-params\">(Context context, AttributeSet attrs)</span> {\n        <span class=\"hljs-built_in\">super</span>(context, attrs);\n        init();\n    }\n\n    <span class=\"hljs-comment\">/**\n     * Default constructor\n     * <span class=\"hljs-doctag\">@param</span> context\n     */</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-title function_\">OverlayDrawView</span><span class=\"hljs-params\">(Context context, AttributeSet attrs, <span class=\"hljs-type\">int</span> defStyleAttr)</span> {\n        <span class=\"hljs-built_in\">super</span>(context, attrs, defStyleAttr);\n        init();\n    }\n\n    <span class=\"hljs-comment\">/**\n     * Setting up the painter to draw Path\n     */</span>\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">init</span><span class=\"hljs-params\">()</span> {\n        mPaint = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Paint</span>();\n        mPaint.setColor(Color.rgb(<span class=\"hljs-number\">255</span>, <span class=\"hljs-number\">255</span>, <span class=\"hljs-number\">255</span>));\n        mPaint.setStrokeWidth(<span class=\"hljs-number\">10</span>);\n        mPaint.setStyle(Paint.Style.STROKE);\n\n        <span class=\"hljs-comment\">// Animating alpha channel from 0 to 255</span>\n        <span class=\"hljs-comment\">// Alpha channel is int, thus ObjectAnimator.ofInt is used</span>\n        mObjectAnimator = ObjectAnimator.ofInt(mPaint, <span class=\"hljs-string\">&quot;alpha&quot;</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">255</span>);\n        mObjectAnimator.setDuration(<span class=\"hljs-number\">600</span>);\n\n        <span class=\"hljs-comment\">// Just Linear interpolation</span>\n        mObjectAnimator.setInterpolator(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">LinearInterpolator</span>());\n\n        <span class=\"hljs-comment\">// Here you can handle value changes</span>\n        mObjectAnimator.addUpdateListener(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ValueAnimator</span>.AnimatorUpdateListener() {\n            <span class=\"hljs-meta\">@Override</span>\n            <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">onAnimationUpdate</span><span class=\"hljs-params\">(ValueAnimator animation)</span> {\n\n                <span class=\"hljs-comment\">// Casting changed Object as int to mPaint as a value of alpha</span>\n                mPaint.setAlpha((<span class=\"hljs-type\">int</span>) animation.getAnimatedValue());\n                invalidate();\n            }\n        });\n    }\n\n    <span class=\"hljs-comment\">/**\n     * onDraw event callback\n     * <span class=\"hljs-doctag\">@param</span> canvas Canvas\n     */</span>\n    <span class=\"hljs-meta\">@Override</span>\n    <span class=\"hljs-keyword\">protected</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">onDraw</span><span class=\"hljs-params\">(Canvas canvas)</span> {\n        <span class=\"hljs-built_in\">super</span>.onDraw(canvas);\n        <span class=\"hljs-keyword\">if</span> (mPath != <span class=\"hljs-literal\">null</span>) {\n            canvas.drawPath(mPath, mPaint);\n        }\n    }\n\n    <span class=\"hljs-comment\">/**\n     * Setting path that has to be drawn\n     * <span class=\"hljs-doctag\">@param</span> path Path\n     */</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">setPath</span><span class=\"hljs-params\">(Path path)</span> {\n        <span class=\"hljs-built_in\">this</span>.mPath = path;\n        mObjectAnimator.start();\n    }\n}\n</code></pre>","type":"blog","meta":{"slug":"animating-paths-transparency","title":"Animating Path's Transparency","layout":"post","lang":"en","description":"A small example of implemetating a Path transparency animation with ObjectAnimator\n","tags":["technology","android","development","animation"],"date":"2016-03-26T18:36:22Z"}},"_nextI18Next":{"initialI18nStore":{"en":{"common":{"common":{"name":"Igor Kuzmenko","version":"version","articleFooter":"If you enjoyed the reading, you can tip me <a href=\"https://fundof.me/kuzzmi?tip\" target=\"_blank\" rel=\"noreferrer\">here</a> ðŸ˜‰","articleNotAvailable":"This content is available only in Ukrainian."},"menu":{"home":"Home","blog":"Tech articles","thoughts":"Thoughts","podcast":"Podcast","projects":"Projects","about":"About me"},"home":{"meta":{"description":"Home page of Igor Kuzmenko"},"bio":"developer and tech entrepreneur","read":"Read","recents":"Recent publications","description":{"part_1":"Here I publish ","part_2":"my thoughts","part_3":" and ","part_4":" tech articles","part_5":". Avid Linux and vim user. Co-founder at "}},"blog":{"description":"Different findings in the tech world that I want to share with world."},"thoughts":{"description":"My thoughts about life and work in Ukrainian."},"about":{"body":"Hi ðŸ‘‹<br /><br />My name is Igor Kuzmenko. I love my wife, son, dog and cat. And I love making things up and making them real (but more often this doesn't happen).<br /><br />For a long time, my personal page seemed like an official paper with a bunch of clichÃ©s, so I got sick of it and turned it into something what feels more like me and my approach to life: a combination of lightness, aesthetics, some seriousness and humor (and modesty).<br /><br />I spend my spare time with my family, doing pet projects, playing video games and more: from playing the ukulele and drawing, to electrical engineering and sports car driving.<br /><br />I've tried countless times to increase my online presence, but it never lasts long ðŸ™ƒ<br /><br />My social networks and contacts are available here: <a href=\"https://fundof.me/igor\">fundof.me/igor</a>"}}}},"initialLocale":"en","userConfig":{"i18n":{"defaultLocale":"en","locales":["en","ua"]},"default":{"i18n":{"defaultLocale":"en","locales":["en","ua"]}}}}},"__N_SSG":true}